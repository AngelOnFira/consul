name: go-tests

on: [push]
  
permissions:
  contents: read

env:
  TEST_RESULTS: /tmp/test-results # path to where test results are saved
  GOTESTSUM_VERSION: 1.8.2

jobs:
  check-go-mod:  #TODO(JM): figure out how to get around no anchors
    if: |
        github.ref != 'refs/heads/stable-website' || 
        !startsWith(github.ref, 'refs/heads/docs/') || 
        !startsWith(github.ref, 'refs/heads/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/docs/') || 
        !startsWith(github.ref, 'refs/heads/backport/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    uses: ./.github/workflows/reusable-check-go-mod.yml

  check-generated-protobuf:
    if: |
        github.ref != 'refs/heads/stable-website' || 
        !startsWith(github.ref, 'refs/heads/docs/') || 
        !startsWith(github.ref, 'refs/heads/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/docs/') || 
        !startsWith(github.ref, 'refs/heads/backport/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
    - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3.5.0
      with:
        go-version-file: 'go.mod'
    - run: make proto-tools
      name: Install protobuf
    - run: make proto-format
      name: "Protobuf Format"
    - run: make --always-make proto
    - run: |
            if ! git diff --exit-code; then
              echo "Generated code was not updated correctly"
              exit 1
            fi
    - run: make proto-lint
      name: "Protobuf Lint"
  
  check-generated-deep-copy:
    if: |
        github.ref != 'refs/heads/stable-website' || 
        !startsWith(github.ref, 'refs/heads/docs/') || 
        !startsWith(github.ref, 'refs/heads/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/docs/') || 
        !startsWith(github.ref, 'refs/heads/backport/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
    - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3.5.0
      with:
        go-version-file: 'go.mod'
    - run: make codegen-tools
      name: Install deep-copy
    - run: make --always-make deep-copy
    - run: |
        if ! git diff --exit-code; then
          echo "Generated code was not updated correctly"
          exit 1
        fi
  
  lint-enums:
    if: |
        github.ref != 'refs/heads/stable-website' || 
        !startsWith(github.ref, 'refs/heads/docs/') || 
        !startsWith(github.ref, 'refs/heads/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/docs/') || 
        !startsWith(github.ref, 'refs/heads/backport/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
    - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3.5.0
      with:
        go-version-file: 'go.mod'
    - run: go install github.com/reillywatson/enumcover/cmd/enumcover@master && enumcover ./...   
    #TODO(JM) - get this from Dan
    # - run: *notify-slack-failure

  lint-container-test-deps:
    if: |
        github.ref != 'refs/heads/stable-website' || 
        !startsWith(github.ref, 'refs/heads/docs/') || 
        !startsWith(github.ref, 'refs/heads/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/docs/') || 
        !startsWith(github.ref, 'refs/heads/backport/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
    - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3.5.0
      with:
        go-version-file: 'go.mod'
    - run: make lint-container-test-deps 
    #TODO(JM) - get this from Dan
    # - run: *notify-slack-failure

  lint-consul-retry:
    if: |
        github.ref != 'refs/heads/stable-website' || 
        !startsWith(github.ref, 'refs/heads/docs/') || 
        !startsWith(github.ref, 'refs/heads/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/docs/') || 
        !startsWith(github.ref, 'refs/heads/backport/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
    - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3.5.0
      with:
        go-version-file: 'go.mod'
    - run: go install github.com/hashicorp/lint-consul-retry@master && lint-consul-retry
    #TODO(JM) - get this from Dan
    # - run: *notify-slack-failure 

  lint:
    if: |
        github.ref != 'refs/heads/stable-website' || 
        !startsWith(github.ref, 'refs/heads/docs/') || 
        !startsWith(github.ref, 'refs/heads/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/docs/') || 
        !startsWith(github.ref, 'refs/heads/backport/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    uses: ./.github/workflows/reusable-lint.yml

  lint-32bit:
    if: |
        github.ref != 'refs/heads/stable-website' || 
        !startsWith(github.ref, 'refs/heads/docs/') || 
        !startsWith(github.ref, 'refs/heads/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/docs/') || 
        !startsWith(github.ref, 'refs/heads/backport/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    uses: ./.github/workflows/reusable-lint.yml
    with:
      go-arch: "386"

  go-test-arm64:
    # TODO(JM):  Fix to run on arm64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3.5.0
        with:
          go-version-file: 'go.mod'

      - name: Install gotestsum
        run: |
          wget https://github.com/gotestyourself/gotestsum/releases/download/v${{env.GOTESTSUM_VERSION}}/gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          sudo tar -C /usr/local/bin -xzf gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          rm gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz

      - run: go mod download
      - run:
          name: make dev
          command: |
            if [[ github.ref == 'refs/heads/main' || !startsWith(github.ref, 'refs/heads/release/') ]]; then
              make dev
              mkdir -p /home/circleci/bin
              cp ./bin/consul /home/circleci/bin/consul
            fi
      - uses: actions/download-artifact@v2
        with:
          name: consul-bin
          path: $HOME/bin
      - run: go mod download
      - name: go test
        run: |
            PACKAGE_NAMES=$(go list ./...)
            
            # TODO(JM): figure out why this erroring
            # if [[ github.ref == 'refs/heads/main' || !startsWith(github.ref, 'refs/heads/release/') ]]; then
            #   export GO_TEST_FLAGS="-short"
            # fi
            
            # some tests expect this umask, and arm images have a different default
            umask 0022

            gotestsum \
            --format=short-verbose \
            --jsonfile /tmp/jsonfile/go-test-${CIRCLE_NODE_INDEX}.log \
            --debug \
            --rerun-fails=3 \
            --rerun-fails-max-failures=40 \
            --rerun-fails-report=/tmp/gotestsum-rerun-fails \
            --packages="$PACKAGE_NAMES" \              
            --junitfile ${{env.TEST_RESULTS}}/gotestsum-report.xml -- \
            -tags="$GOTAGS" -p 4 \
            ${GO_TEST_FLAGS-} \
            -cover -coverprofile=coverage.txt
      # TODO(JM): Figure out how to store these
      # - store_test_results:
      #     path: *TEST_RESULTS_DIR
      - uses: actions/upload-artifact@master
        with:
          name: test-results
          path: ${{env.TEST_RESULTS}}
      - uses: actions/upload-artifact@master
        with:
          name: jsonfile
          path: /tmp/jsonfile
      # - name: "Re-run fails report"
      #   run: |
      #     #!/usr/bin/env bash
      #     #
      #     # Add a comment on the github PR if there were any rerun tests.
      #     #
      #     set -eu -o pipefail

      #     report_filename="${1?report filename is required}"
      #     if [ ! -s "$report_filename" ]; then
      #         echo "gotestsum rerun report file is empty or missing"
      #         exit 0
      #     fi

      #     function report {
      #         echo ":repeat: gotestsum re-ran some tests in $CIRCLE_BUILD_URL"
      #         echo
      #         echo '```'
      #         cat "$report_filename"
      #         echo '```'
      #     }

      #     report
      
      # TODO(JM) Figure out how to do this
      # - run: *notify-slack-failure

  # create a development build
  dev-build:
    if: |
        github.ref != 'refs/heads/stable-website' || 
        !startsWith(github.ref, 'refs/heads/docs/') || 
        !startsWith(github.ref, 'refs/heads/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/docs/') || 
        !startsWith(github.ref, 'refs/heads/backport/ui/') || 
        !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3.5.0
        with:
          go-version-file: 'go.mod'
        # TODO(JM) - figure out why this fails and if it is needed
      # # this normally runs as the first job and has nothing to attach; only used in main branch after rebuilding UI
      # - uses: actions/download-artifact@v2
      #   with:
      #     name: root-path
      #     path: .
      - name: Build
        run: |
          make dev
          mkdir -p $HOME/bin
          cp ./bin/consul $HOME/bin/consul
      # save dev build to pass to downstream jobs
      - uses: actions/upload-artifact@master
        with:
          name: consul-bin
          path: $HOME/bin/consul
      # TODO(JM) Figure out how to do this
      # - run: *notify-slack-failure

  go-test:
    needs:
      - dev-build
    runs-on: ubuntu-latest
    # TODO(JM): Combine with go-test-arm64
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3.5.0
        with:
          go-version-file: 'go.mod'
      - name: Setup go mod cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install gotestsum
        run: |
          wget https://github.com/gotestyourself/gotestsum/releases/download/v${{env.GOTESTSUM_VERSION}}/gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          sudo tar -C /usr/local/bin -xzf gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          rm gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz

      - run:  mkdir -p ${{env.TEST_RESULTS}}
      - run:  echo "$HOME/bin" >> $GITHUB_PATH

      # - name: Download consul
      #   run: |
      #     mkdir -p $HOME/bin
      #     container_id=$(docker create ${{env.CONSUL_OSS_DOCKER_IMAGE}})
      #     docker cp "$container_id:/bin/consul" $HOME/bin/consul
      #     docker rm "$container_id"
      - name: Run go tests
        run: |
            PACKAGE_NAMES=$(go list ./...)
            if [ ! -s "$report_filename" ]; then
            
            # TODO(JM): figure out why this erroring
            # if '${{ github.ref }}' == 'refs/heads/docs/' || startsWith('${{ github.ref }}', 'refs/heads/release/'); then
            #   export GO_TEST_FLAGS="-short"
            # fi
            
            # some tests expect this umask, and arm images have a different default
            umask 0022

            gotestsum \
            --format=short-verbose \
            --jsonfile /tmp/jsonfile/go-test-${CIRCLE_NODE_INDEX}.log \
            --debug \
            --rerun-fails=3 \
            --rerun-fails-max-failures=40 \
            --rerun-fails-report=/tmp/gotestsum-rerun-fails \
            --packages="$PACKAGE_NAMES" \              
            --junitfile ${{env.TEST_RESULTS}}/gotestsum-report.xml -- \
            -tags="$GOTAGS" -p 4 \
            ${GO_TEST_FLAGS-} \
            -cover -coverprofile=coverage.txt
      # TODO(JM): Figure out how to store these
      # - store_test_results:
      #     path: *TEST_RESULTS_DIR
      - uses: actions/upload-artifact@master
        with:
          name: consul-bin
          path: ${{env.TEST_RESULTS}}
      - uses: actions/upload-artifact@master
        with:
          name: consul-bin
          path: /tmp/jsonfile
      # - name: "Re-run fails report"
      #   run: |
      #     #!/usr/bin/env bash
      #     #
      #     # Add a comment on the github PR if there were any rerun tests.
      #     #
      #     set -eu -o pipefail

      #     report_filename="${1?report filename is required}"
      #     if [ ! -s "$report_filename" ]; then
      #         echo "gotestsum rerun report file is empty or missing"
      #         exit 0
      #     fi

      #     function report {
      #         echo ":repeat: gotestsum re-ran some tests in $CIRCLE_BUILD_URL"
      #         echo
      #         echo '```'
      #         cat "$report_filename"
      #         echo '```'
      #     }

      #     report
      
      # TODO(JM) Figure out how to do this
      # - run: *notify-slack-failure
  go-test-envoyextensions:
    if: |
      github.ref != 'refs/heads/stable-website' || 
      !startsWith(github.ref, 'refs/heads/docs/') || 
      !startsWith(github.ref, 'refs/heads/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/docs/') || 
      !startsWith(github.ref, 'refs/heads/backport/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    needs:
    - dev-build
    uses: ./.github/workflows/reusable-unit.yml
    with:
      directory: envoyextensions
      go-version: "1.20"

  go-test-troubleshoot:
    if: |
      github.ref != 'refs/heads/stable-website' || 
      !startsWith(github.ref, 'refs/heads/docs/') || 
      !startsWith(github.ref, 'refs/heads/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/docs/') || 
      !startsWith(github.ref, 'refs/heads/backport/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    needs:
    - dev-build
    runs-on: ubuntu-latest
    steps:
    - uses: ./.github/workflows/reusable-unit.yml
      with:
        directory: troubleshoot
        go-version: "1.20"

  go-test-api-1-19:
    if: |
      github.ref != 'refs/heads/stable-website' || 
      !startsWith(github.ref, 'refs/heads/docs/') || 
      !startsWith(github.ref, 'refs/heads/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/docs/') || 
      !startsWith(github.ref, 'refs/heads/backport/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    needs:
    - dev-build
    uses: ./.github/workflows/reusable-unit.yml
    with:
      directory: api
      go-version: "1.19"

  go-test-api-1-20:
    if: |
      github.ref != 'refs/heads/stable-website' || 
      !startsWith(github.ref, 'refs/heads/docs/') || 
      !startsWith(github.ref, 'refs/heads/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/docs/') || 
      !startsWith(github.ref, 'refs/heads/backport/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    needs:
    - dev-build
    uses: ./.github/workflows/reusable-unit.yml
    with:
      directory: api
      go-version: "1.20"

  go-test-sdk-1-19:
    if: |
      github.ref != 'refs/heads/stable-website' || 
      !startsWith(github.ref, 'refs/heads/docs/') || 
      !startsWith(github.ref, 'refs/heads/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/docs/') || 
      !startsWith(github.ref, 'refs/heads/backport/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    needs:
    - dev-build
    uses: ./.github/workflows/reusable-unit.yml
    with:
      directory: sdk
      go-version: "1.19"

  go-test-sdk-1-20:
    if: |
      github.ref != 'refs/heads/stable-website' || 
      !startsWith(github.ref, 'refs/heads/docs/') || 
      !startsWith(github.ref, 'refs/heads/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/docs/') || 
      !startsWith(github.ref, 'refs/heads/backport/ui/') || 
      !startsWith(github.ref, 'refs/heads/backport/mktg-.')
    needs:
    - dev-build
    uses: ./.github/workflows/reusable-unit.yml
    with:
      directory: api
      go-version: "1.20"

  noop:
    runs-on: ubuntu-latest
    steps:
      - run: "echo ok"
