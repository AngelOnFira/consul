{
  "versionInfo": "00000001",
  "resources": [
    {
      "@type": "type.googleapis.com/envoy.config.listener.v3.Listener",
      "name": "grpc:1.2.3.4:8080",
      "address": {
        "socketAddress": {
          "address": "1.2.3.4",
          "portValue": 8080
        }
      },
      "filterChains": [
        {
          "filters": [
            {
              "name": "envoy.filters.network.http_connection_manager",
              "typedConfig": {
                "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                "statPrefix": "ingress_upstream_8080",
                "rds": {
                  "configSource": {
                    "ads": {

                    },
                    "resourceApiVersion": "V3"
                  },
                  "routeConfigName": "8080"
                },
                "httpFilters": [
                  {
                    "name": "envoy.filters.http.grpc_stats",
                    "typedConfig": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.http.grpc_stats.v3.FilterConfig",
                      "statsForAllMethods": true
                    }
                  },
                  {
                    "name": "envoy.filters.http.grpc_http1_bridge",
                    "typedConfig": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.http.grpc_http1_bridge.v3.Config"
                    }
                  },
                  {
                    "name": "envoy.filters.http.header_to_metadata",
                    "typedConfig": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.http.header_to_metadata.v3.Config",
                      "requestRules": [
                        {
                          "header": "x-forwarded-client-cert",
                          "onHeaderPresent": {
                            "metadataNamespace": "consul",
                            "key": "trust_domain",
                            "regexValueRewrite": {
                              "pattern": {
                                "googleRe2": {

                                },
                                "regex": "^spiffe://([^/]+.[^/]+)(/ap/([^/]+))?/ns/([^/]+)/dc/([^/]+)/svc/([^/]+)$"
                              },
                              "substitution": "\\0"
                            }
                          }
                        },
                        {
                          "header": "x-forwarded-client-cert",
                          "onHeaderPresent": {
                            "metadataNamespace": "consul",
                            "key": "partition",
                            "regexValueRewrite": {
                              "pattern": {
                                "googleRe2": {

                                },
                                "regex": "^spiffe://([^/]+.[^/]+)(/ap/([^/]+))?/ns/([^/]+)/dc/([^/]+)/svc/([^/]+)$"
                              },
                              "substitution": "\\1"
                            }
                          }
                        },
                        {
                          "header": "x-forwarded-client-cert",
                          "onHeaderPresent": {
                            "metadataNamespace": "consul",
                            "key": "namespace",
                            "regexValueRewrite": {
                              "pattern": {
                                "googleRe2": {

                                },
                                "regex": "^spiffe://([^/]+.[^/]+)(/ap/([^/]+))?/ns/([^/]+)/dc/([^/]+)/svc/([^/]+)$"
                              },
                              "substitution": "\\2"
                            }
                          }
                        },
                        {
                          "header": "x-forwarded-client-cert",
                          "onHeaderPresent": {
                            "metadataNamespace": "consul",
                            "key": "datacenter",
                            "regexValueRewrite": {
                              "pattern": {
                                "googleRe2": {

                                },
                                "regex": "^spiffe://([^/]+.[^/]+)(/ap/([^/]+))?/ns/([^/]+)/dc/([^/]+)/svc/([^/]+)$"
                              },
                              "substitution": "\\3"
                            }
                          }
                        },
                        {
                          "header": "x-forwarded-client-cert",
                          "onHeaderPresent": {
                            "metadataNamespace": "consul",
                            "key": "service",
                            "regexValueRewrite": {
                              "pattern": {
                                "googleRe2": {

                                },
                                "regex": "^spiffe://([^/]+.[^/]+)(/ap/([^/]+))?/ns/([^/]+)/dc/([^/]+)/svc/([^/]+)$"
                              },
                              "substitution": "\\4"
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "envoy.filters.http.router",
                    "typedConfig": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                    }
                  }
                ],
                "tracing": {
                  "randomSampling": {

                  }
                },
                "http2ProtocolOptions": {

                }
              }
            }
          ]
        }
      ],
      "trafficDirection": "OUTBOUND"
    }
  ],
  "typeUrl": "type.googleapis.com/envoy.config.listener.v3.Listener",
  "nonce": "00000001"
}